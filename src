import React, { useState } from 'react';
import { Home, TrendingUp, Menu, Sun, Trees, AlertCircle, CheckCircle, XCircle, Wind, Factory, Heart, Activity, Database, Radio, Battery, Cpu } from 'lucide-react';

const ClimaXUrbanPlanner = () => {
  const [currentScreen, setCurrentScreen] = useState('home');
  const [selectedZone, setSelectedZone] = useState(null);
  const [selectedStation, setSelectedStation] = useState(null);
  
  const zones = [
    {
      id: 1,
      name: 'Gulshan Commercial',
      type: 'commercial',
      healthScore: 45,
      status: 'critical',
      issues: ['Low O2', 'High PM2.5', 'No greenspace'],
      stationId: 'CLX-001',
      lastUpdate: '2 mins ago',
      localData: { o2Level: 18.2, pm25: 125, temperature: 34, greenCover: 8, treeCount: 45 },
      nasaData: { surfaceTemp: 35.2, vegetation: 0.12, airQuality: 'Poor' },
      recommendations: [
        { action: 'Plant 500+ trees in 6 months', priority: 'high', dept: 'Parks' },
        { action: 'Create 3 pocket parks', priority: 'high', dept: 'Urban Dev' }
      ]
    },
    {
      id: 2,
      name: 'Dhanmondi Residential',
      type: 'residential',
      healthScore: 72,
      status: 'moderate',
      issues: ['Moderate air quality'],
      stationId: 'CLX-002',
      lastUpdate: '5 mins ago',
      localData: { o2Level: 20.1, pm25: 68, temperature: 29, greenCover: 25, treeCount: 340 },
      nasaData: { surfaceTemp: 28.5, vegetation: 0.45, soilMoisture: 0.18 },
      recommendations: [
        { action: 'Expand parks by 15%', priority: 'medium', dept: 'Parks' }
      ]
    },
    {
      id: 3,
      name: 'Mirpur Industrial',
      type: 'industrial',
      healthScore: 28,
      status: 'critical',
      issues: ['Severe pollution', 'No greenspace'],
      stationId: 'CLX-003',
      lastUpdate: '1 min ago',
      localData: { o2Level: 17.5, pm25: 185, temperature: 36, greenCover: 2, treeCount: 12 },
      nasaData: { surfaceTemp: 37.8, vegetation: 0.05, airQuality: 'Hazardous' },
      recommendations: [
        { action: 'Mandatory air filtration', priority: 'critical', dept: 'Environment' },
        { action: 'Create green buffer zone', priority: 'critical', dept: 'Planning' }
      ]
    },
    {
      id: 4,
      name: 'Uttara Development',
      type: 'mixed',
      healthScore: 85,
      status: 'good',
      issues: [],
      stationId: 'CLX-004',
      lastUpdate: '3 mins ago',
      localData: { o2Level: 20.8, pm25: 42, temperature: 27, greenCover: 42, treeCount: 890 },
      nasaData: { surfaceTemp: 26.5, vegetation: 0.68, airQuality: 'Good' },
      recommendations: [
        { action: 'Maintain standards', priority: 'low', dept: 'Planning' }
      ]
    }
  ];

  const getStatusColor = (status) => {
    if (status === 'critical') return 'bg-red-500';
    if (status === 'moderate') return 'bg-yellow-500';
    if (status === 'good') return 'bg-green-500';
    return 'bg-gray-500';
  };

  const getPriorityColor = (priority) => {
    if (priority === 'critical') return 'bg-red-600';
    if (priority === 'high') return 'bg-orange-500';
    if (priority === 'medium') return 'bg-yellow-500';
    return 'bg-blue-500';
  };

  const HomeScreen = () => (
    <div className="flex flex-col h-full bg-gradient-to-b from-slate-800 to-slate-900 text-white p-6">
      <div className="mb-6">
        <h1 className="text-3xl font-bold mb-2">ClimaX Urban Planner</h1>
        <p className="text-slate-300">Data-Driven Sustainable Cities</p>
      </div>

      <div className="bg-gradient-to-r from-blue-600 to-purple-600 rounded-3xl p-6 mb-6">
        <h2 className="text-xl font-bold mb-2">Dhaka Overview</h2>
        <div className="grid grid-cols-2 gap-4">
          <div>
            <div className="text-3xl font-bold">58</div>
            <div className="text-sm text-blue-100">Avg Health Score</div>
          </div>
          <div>
            <div className="text-3xl font-bold">4</div>
            <div className="text-sm text-blue-100">Zones Monitored</div>
          </div>
        </div>
      </div>

      <h3 className="text-lg font-semibold mb-3">Active Stations</h3>
      <div className="space-y-3 flex-1 overflow-y-auto">
        {zones.map(zone => (
          <div 
            key={zone.id}
            className="bg-slate-800 rounded-2xl p-4"
          >
            <div className="flex items-start justify-between mb-2">
              <div className="flex-1">
                <h4 className="font-semibold">{zone.name}</h4>
                <p className="text-xs text-slate-400 capitalize">{zone.type}</p>
              </div>
              <div className={w-3 h-3 rounded-full ${getStatusColor(zone.status)}}></div>
            </div>
            
            <div className="flex items-center gap-2 mt-3">
              <div className="flex-1 bg-slate-700 rounded-full h-2">
                <div 
                  className={h-2 rounded-full ${getStatusColor(zone.status)}}
                  style={{ width: ${zone.healthScore}% }}
                ></div>
              </div>
              <span className="text-sm font-semibold">{zone.healthScore}</span>
            </div>
            
            <div className="mt-3 flex gap-2">
              <button
                onClick={() => {
                  setSelectedZone(zone);
                  setCurrentScreen('zone');
                }}
                className="flex-1 text-xs text-blue-400 hover:text-blue-300 py-2 bg-slate-700 rounded-lg"
              >
                View Details
              </button>
              <button
                onClick={() => {
                  setSelectedStation(zone);
                  setCurrentScreen('robot');
                }}
                className="text-xs text-cyan-400 hover:text-cyan-300 flex items-center gap-1 py-2 px-3 bg-slate-700 rounded-lg"
              >
                <Activity className="w-3 h-3" />
                Station
              </button>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
  const ZoneDetailScreen = () => {
    if (!selectedZone) return null;

    return (
      <div className="flex flex-col h-full bg-slate-900 text-white overflow-y-auto">
        <div className="bg-gradient-to-r from-slate-800 to-slate-700 p-6">
          <button 
            onClick={() => setCurrentScreen('home')}
            className="text-blue-400 mb-4 text-sm"
          >
            ← Back
          </button>
          <h2 className="text-2xl font-bold mb-1">{selectedZone.name}</h2>
          <div className="flex items-center gap-2">
            <div className={w-3 h-3 rounded-full ${getStatusColor(selectedZone.status)}}></div>
            <span className="text-sm text-slate-300 capitalize">{selectedZone.status}</span>
          </div>
        </div>

        <div className="p-6 space-y-6">
          <div>
            <h3 className="text-lg font-semibold mb-3 flex items-center gap-2">
              <AlertCircle className="w-5 h-5 text-amber-400" />
              Issues
            </h3>
            <div className="space-y-2">
              {selectedZone.issues.map((issue, idx) => (
                <div key={idx} className="bg-slate-800 rounded-xl p-3 flex items-center gap-2">
                  <XCircle className="w-4 h-4 text-red-400" />
                  <span className="text-sm">{issue}</span>
                </div>
              ))}
            </div>
          </div>

          <div>
            <h3 className="text-lg font-semibold mb-3">Local Sensor Data</h3>
            <div className="grid grid-cols-2 gap-3">
              <div className="bg-slate-800 rounded-xl p-4">
                <div className="text-xs text-slate-400 mb-1">O₂ Level</div>
                <div className="text-2xl font-bold">{selectedZone.localData.o2Level}%</div>
              </div>
              <div className="bg-slate-800 rounded-xl p-4">
                <div className="text-xs text-slate-400 mb-1">PM2.5</div>
                <div className="text-2xl font-bold">{selectedZone.localData.pm25}</div>
              </div>
              <div className="bg-slate-800 rounded-xl p-4">
                <div className="text-xs text-slate-400 mb-1">Green Cover</div>
                <div className="text-2xl font-bold">{selectedZone.localData.greenCover}%</div>
              </div>
              <div className="bg-slate-800 rounded-xl p-4">
                <div className="text-xs text-slate-400 mb-1">Temperature</div>
                <div className="text-2xl font-bold">{selectedZone.localData.temperature}°C</div>
              </div>
            </div>
          </div>

          <div>
            <h3 className="text-lg font-semibold mb-3">NASA Data</h3>
            <div className="bg-gradient-to-r from-blue-900 to-purple-900 rounded-xl p-4 space-y-3">
              <div className="flex justify-between">
                <div>
                  <div className="text-xs text-blue-300">MODIS Surface Temp</div>
                     <div className="font-bold">{selectedZone.nasaData.surfaceTemp}°C</div>
                </div>
                <div className="text-xs text-slate-400">Validated</div>
              </div>
              <div className="flex justify-between">
                <div>
                  <div className="text-xs text-blue-300">VIIRS Vegetation</div>
                  <div className="font-bold">{selectedZone.nasaData.vegetation}</div>
                </div>
                <div className="text-xs text-slate-400">Validated</div>
              </div>
            </div>
          </div>

          <div>
            <h3 className="text-lg font-semibold mb-3 flex items-center gap-2">
                   <Heart className="w-5 h-5 text-green-400" />
              Actions
            </h3>
            <div className="space-y-3">
              {selectedZone.recommendations.map((rec, idx) => (
                <div key={idx} className="bg-slate-800 rounded-xl p-4">
                  <div className="flex items-start gap-3">
                    <div className={px-2 py-1 rounded text-xs font-semibold ${getPriorityColor(rec.priority)}}>
                      {rec.priority.toUpperCase()}
                    </div>
                    <div className="flex-1">
                      <p className="font-semibold mb-1">{rec.action}</p>
                      <p className="text-xs text-slate-400">{rec.dept}</p>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    );
  };
    const RobotDataScreen = () => {
    const station = selectedStation || zones[0];
    
    return (
      <div className="flex flex-col h-full bg-slate-900 text-white overflow-y-auto">
        <div className="bg-gradient-to-r from-cyan-600 to-blue-600 p-6">
          <button 
            onClick={() => setCurrentScreen('home')}
            className="text-cyan-100 mb-4 text-sm"
          >
            ← Back
          </button>
          <h2 className="text-2xl font-bold mb-1">Station {station.stationId}</h2>
          <div className="flex items-center gap-2">
            <div className="w-3 h-3 rounded-full bg-green-400 animate-pulse"></div>
            <span className="text-sm text-cyan-100">Live • {station.lastUpdate}</span>
          </div>
        </div>
           <div className="p-6 space-y-6">
          <div className="bg-slate-800 rounded-2xl p-5">
            <h3 className="text-lg font-semibold mb-4 flex items-center gap-2">
              <Activity className="w-5 h-5 text-cyan-400" />
              Hardware
            </h3>
            
            <div className="space-y-3">
              <div className="bg-slate-700 rounded-xl p-3">
                <div className="flex items-center justify-between mb-2">
                  <span className="text-sm font-semibold">Atmospheric Sensors</span>
                  <CheckCircle className="w-4 h-4 text-green-400" />
                </div>
                <div className="text-xs text-slate-400 space-y-1">
                  <p>• IR Sensor - Temperature</p>
                  <p>• DHT22 - Humidity</p>
                  <p>• MQ-135 - Gas detection</p>
                </div>
              </div>
              <div className="bg-slate-700 rounded-xl p-3">
                <div className="flex items-center justify-between mb-2">
                  <span className="text-sm font-semibold">Air Quality</span>
                  <CheckCircle className="w-4 h-4 text-green-400" />
                </div>
                <div className="text-xs text-slate-400">
                  <p>• PM2.5 sensor</p>
                  <p>• O₂ measurement</p>
                </div>
              </div>

              <div className="bg-slate-700 rounded-xl p-3">
                <div className="flex items-center justify-between mb-2">
                  <span className="text-sm font-semibold">Power</span>
                  <Battery className="w-4 h-4 text-green-400" />
                </div>
                <div className="text-xs text-slate-400">
                  <p>• 50W Solar panel</p>
                  <p>• Battery: 92% charged</p>
                </div>
              </div>
            </div>
          </div>

          <div className="bg-slate-800 rounded-2xl p-5">
            <h3 className="text-lg font-semibold mb-4 flex items-center gap-2">
              <Database className="w-5 h-5 text-purple-400" />
              Data Process
            </h3>
            
            <div className="space-y-4">
              <div className="flex items-start gap-3">
                <div className="bg-purple-600 w-8 h-8 rounded-full flex items-center justify-center font-bold text-sm">1</div>
                <div className="flex-1">
                  <h4 className="font-semibold mb-1">Real-time Sensing</h4>
                  <p className="text-sm text-slate-400">Sensors measure every 30 seconds</p>
                </div>
              </div>
              <div className="flex items-start gap-3">
                <div className="bg-purple-600 w-8 h-8 rounded-full flex items-center justify-center font-bold text-sm">2</div>
                <div className="flex-1">
                  <h4 className="font-semibold mb-1">Local Processing</h4>
                  <p className="text-sm text-slate-400">Filter and calculate averages</p>
                </div>
              </div>

              <div className="flex items-start gap-3">
                <div className="bg-purple-600 w-8 h-8 rounded-full flex items-center justify-center font-bold text-sm">3</div>
                <div className="flex-1">
                  <h4 className="font-semibold mb-1">Wireless Upload</h4>
                  <p className="text-sm text-slate-400">IoT network to cloud every 5 min</p>
                </div>
              </div>
              <div className="flex items-start gap-3">
                <div className="bg-purple-600 w-8 h-8 rounded-full flex items-center justify-center font-bold text-sm">4</div>
                <div className="flex-1">
                  <h4 className="font-semibold mb-1">NASA Integration</h4>
                  <p className="text-sm text-slate-400">Pull satellite data for validation</p>
                </div>
              </div>

              <div className="flex items-start gap-3">
                <div className="bg-purple-600 w-8 h-8 rounded-full flex items-center justify-center font-bold text-sm">5</div>
                <div className="flex-1">
                  <h4 className="font-semibold mb-1">AI Analysis</h4>
                  <p className="text-sm text-slate-400">Define zones and health scores</p>
                </div>
              </div>

              <div className="flex items-start gap-3">
                <div className="bg-purple-600 w-8 h-8 rounded-full flex items-center justify-center font-bold text-sm">6</div>
                <div className="flex-1">
                  <h4 className="font-semibold mb-1">Recommendations</h4>
                  <p className="text-sm text-slate-400">Generate specific actions</p>
                </div>
              </div>
            </div>
          </div>

          <div className="bg-gradient-to-r from-green-600 to-emerald-600 rounded-2xl p-5">
            <h3 className="text-lg font-semibold mb-3 flex items-center gap-2">
              <Cpu className="w-5 h-5" />
              Current Analysis
            </h3>
            
            <div className="bg-white/10 rounded-xl p-4 space-y-3">
              <div className="flex justify-between">
                <span className="text-sm">Zone Type:</span>
                <span className="font-bold capitalize">{station.type}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-sm">Health Score:</span>
                <span className="font-bold text-2xl">{station.healthScore}/100</span>
              </div>
              <div className="flex justify-between">
                <span className="text-sm">Status:</span>
                <span className={`px-3 py-1 rounded-full text-xs font-semibold ${
                  station.status === 'critical' ? 'bg-red-500' :
                  station.status === 'moderate' ? 'bg-yellow-500' : 'bg-green-500'
                }`}>{station.status.toUpperCase()}</span>
              </div>
            </div>
          </div>

          <div className="bg-slate-800 rounded-2xl p-5">
            <h3 className="text-lg font-semibold mb-3 flex items-center gap-2">
              <Radio className="w-5 h-5 text-blue-400" />
              Live Stream
            </h3>
            
            <div className="space-y-2 font-mono text-xs">
              <div className="bg-slate-900 p-2 rounded">
                <span className="text-green-400">O₂: {station.localData.o2Level}%</span>
              </div>
              <div className="bg-slate-900 p-2 rounded">
                <span className="text-yellow-400">PM2.5: {station.localData.pm25}</span>
              </div>
              <div className="bg-slate-900 p-2 rounded">
               <span className="text-cyan-400">Validating NASA data...</span>
              </div>
              <div className="bg-slate-900 p-2 rounded">
                <span className="text-blue-400">Analysis complete</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    );
  };

  const AnalyticsScreen = () => (
    <div className="flex flex-col h-full bg-slate-900 text-white p-6 overflow-y-auto">
      <h2 className="text-2xl font-bold mb-6">Analytics</h2>
      
      <div className="space-y-6">
        <div className="bg-slate-800 rounded-2xl p-4">
          <h3 className="font-semibold mb-4">Zone Comparison</h3>
          <div className="space-y-3">
            {zones.map(zone => (
              <div key={zone.id}>
                <div className="flex justify-between text-sm mb-1">
                  <span>{zone.name}</span>
                  <span className="font-semibold">{zone.healthScore}</span>
                </div>
                <div className="bg-slate-700 rounded-full h-2">
                  <div 
                    className={h-2 rounded-full ${getStatusColor(zone.status)}}
                    style={{ width: ${zone.healthScore}% }}
                  ></div>
                </div>
              </div>
            ))}
          </div>
        </div>

        <div className="bg-slate-800 rounded-2xl p-4">
          <h3 className="font-semibold mb-3">Priority Actions</h3>
          <div className="space-y-2 text-sm">
            <div className="flex justify-between">
              <span>Critical</span>
              <span className="text-red-400 font-bold">8 actions</span>
            </div>
            <div className="flex justify-between">
              <span>High</span>
              <span className="text-orange-400 font-bold">6 actions</span>
           </div>
          </div>
        </div>
      </div>
    </div>
  );

  const MenuScreen = () => (
    <div className="flex flex-col h-full bg-slate-900 text-white p-6 overflow-y-auto">
      <h2 className="text-2xl font-bold mb-6">About</h2>
      
      <div className="space-y-3">
        <div className="bg-slate-800 rounded-2xl p-4">
          <h3 className="font-semibold mb-2">How It Works</h3>
          <ol className="text-sm text-slate-300 space-y-2">
            <li>1. ClimaX stations collect local data</li>
            <li>2. NASA satellites validate</li>
            <li>3. AI analyzes and defines zones</li>
            <li>4. Generate recommendations</li>
            <li>5. City implements solutions</li>
         </ol>
        </div>
        
        <div className="bg-slate-800 rounded-2xl p-4">
          <h3 className="font-semibold mb-2">Data Sources</h3>
          <div className="text-sm text-slate-300 space-y-1">
            <p><strong>Local:</strong> ClimaX sensors</p>
            <p><strong>Satellite:</strong> MODIS, VIIRS, SMAP</p>
          </div>
        </div>
      </div>

      <div className="mt-auto pt-6 text-center text-sm text-slate-500">
        <p className="font-semibold">Team Jantrik</p>
        <p className="mt-1">NASA Space Apps 2025</p>
      </div>
    </div>
  );

  return (
    <div className="w-full h-screen max-w-md mx-auto bg-slate-900 flex flex-col">
      <div className="flex-1 overflow-hidden">
        {currentScreen === 'home' && <HomeScreen />}
        {currentScreen === 'zone' && <ZoneDetailScreen />}
        {currentScreen === 'robot' && <RobotDataScreen />}
       {currentScreen === 'analytics' && <AnalyticsScreen />}
        {currentScreen === 'menu' && <MenuScreen />}
      </div>
      
      <div className="bg-slate-800 border-t border-slate-700">
        <div className="flex justify-around items-center h-20 px-6">
          <button 
            onClick={() => setCurrentScreen('home')}
            className={flex flex-col items-center gap-1 ${currentScreen === 'home' ? 'text-blue-400' : 'text-slate-400'}}
          >
            <Home className="w-6 h-6" />
            <span className="text-xs">Zones</span>
          </button>
          
          <button 
            onClick={() => setCurrentScreen('analytics')}
            className={flex flex-col items-center gap-1 ${currentScreen === 'analytics' ? 'text-blue-400' : 'text-slate-400'}}
          >
            <TrendingUp className="w-6 h-6" />
            <span className="text-xs">Analytics</span>
          </button>
          
          <button 
            onClick={() => setCurrentScreen('menu')}
            className={flex flex-col items-center gap-1 ${currentScreen === 'menu' ? 'text-blue-400' : 'text-slate-400'}}

         >
            <Menu className="w-6 h-6" />
            <span className="text-xs">About</span>
          </button>
        </div>
      </div>
    </div>
  );
};

export default ClimaXUrbanPlanner;

    
